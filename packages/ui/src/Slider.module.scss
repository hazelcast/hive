@use '../styles/constants' as c;
@use '../styles/helpers' as h;

$sliderBaseSize: 1rem;

// border radius on left/right size of the progress tracker
$trackBorderRadius: c.$grid * 2;

// height of the track
$trackHeight: $sliderBaseSize;
$thumbBorderSize: c.$grid * 1.5; // in rem

$sliderThumbHoverBorderSize: 1px;

$sliderThumbShadowSize: 1px;
$sliderThumbShadowBlur: c.$grid;
$sliderThumbShadowColor: rgba(53, 61, 73, 0.5);

// thumb width without a white border, let's make it the height of the slider
$thumbWidth: $trackHeight;
$thumbFullWidth: $thumbWidth + $thumbBorderSize * 2;

$fillBorderSize: 1px;

@mixin track() {
  background: none; // get rid of track background
  appearance: none;

  // it's important for these values to be 0 in order to be consistent across (Firefox/IE11) & Chrome
  margin: 0;
  padding: 0;
  border: 0;

  box-sizing: border-box;
}

@mixin thumb() {
  box-shadow: 0 $sliderThumbShadowSize $sliderThumbShadowBlur $sliderThumbShadowColor;
  // background will represent the dot inside
  background: c.$colorPrimaryLight;
  //background: red;
  // the white part will be done by the border
  border: $thumbBorderSize solid c.$colorNeutralWhite;
  box-sizing: content-box; /* and because of all of this, we need content-box */

  border-radius: 50%;
  pointer-events: auto; /* catch clicks */
  width: $thumbWidth;
  height: $thumbWidth;
}

// This mixing is used for fill and fillPlaceholder in order to pass events to the parent wrapper + use the same radius
@mixin fill {
  pointer-events: none;
}

// used to position elements on top of each other using grid
@mixin gridItem() {
  grid-column: 1;
  grid-row: 1;
  -ms-grid-column: 1;
  -ms-grid-row: 1;
}

.wrapper {
  display: flex;
  align-items: center;

  .groupWrapper {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    flex: 1;

    display: -ms-grid;
    -ms-grid-columns: 1fr;
    -ms-grid-rows: 1fr;

    input[type='range'] {
      &::-webkit-slider-runnable-track,
      &::-webkit-slider-thumb,
      & {
        -webkit-appearance: none;
      }

      outline: none;
      @include gridItem;
      background: none;
      // ignore clicks on the actual inputs and let them pass to the handles
      pointer-events: none;
      min-height: $trackHeight;

      padding: 0;
      margin: 0;
      justify-self: center;
      width: calc(100% + #{$thumbBorderSize * 2});

      // Style the track
      &::-webkit-slider-runnable-track {
        @include track;
      }

      &::-moz-range-track {
        @include track;
      }

      &::-ms-track {
        @include track;
        // IE11 specific rule to hide the default tick marks
        visibility: hidden;
      }

      /**
        Hover
       */
      &:hover,
      &.hover {
        &::-webkit-slider-thumb {
          box-shadow: 0 0 0 $sliderThumbHoverBorderSize c.$colorPrimary;
        }

        &::-moz-range-thumb {
          box-shadow: 0 0 0 $sliderThumbHoverBorderSize c.$colorPrimary;
        }

        &::-ms-thumb {
          box-shadow: 0 0 0 $sliderThumbHoverBorderSize c.$colorPrimary;
        }
      }

      &.focus,
      &:focus {
        &::-webkit-slider-thumb {
          box-shadow: 0 0 0 c.$outlineWidth c.$colorAccessibilityOutline;
        }

        &::-moz-range-thumb {
          box-shadow: 0 0 0 c.$outlineWidth c.$colorAccessibilityOutline;
        }

        &::-ms-thumb {
          // TODO - this doesn't work on IE, figure out a way out!
          box-shadow: 0 0 0 c.$outlineWidth c.$colorAccessibilityOutline;
        }
      }

      // Thumb related stylings
      &::-webkit-slider-thumb {
        @include thumb;
      }

      &::-moz-range-thumb {
        @include thumb;
      }

      &::-ms-thumb {
        @include thumb;
      }

      // don't show IE11's lower fill
      &::-ms-fill-lower {
        display: none;
      }
    }

    // see the javascript code for an explanation of this class
    input[type='range'].atTheBorder {
      &::-webkit-slider-thumb {
        pointer-events: none;
      }

      &::-moz-range-thumb {
        pointer-events: none;
      }
    }

    .fillPlaceholder {
      @include gridItem;
      @include fill;

      height: $trackHeight;
      // highlighted part covers the border
      box-sizing: border-box;
      background: c.$colorNeutral;
      border: $fillBorderSize solid c.$colorNeutralLight;
      width: 100%;

      // if the actual fill is very small the border is rounded, it can reach out of the wrapper
      overflow: hidden;

      // we ned to reserve space like this manually mostly because of IE11
      margin-top: calc(#{$thumbBorderSize} + #{$sliderThumbShadowSize});
      margin-bottom: calc(#{$thumbBorderSize} + #{$sliderThumbShadowSize});
      border-radius: $trackBorderRadius;

      .fill {
        @include fill();
        height: calc(#{$trackHeight} - #{$fillBorderSize} * 2); // height minus border from top & bottom
        background: c.$colorPrimaryLight;
        // width & marginLeft will be set by a Javascript
      }
    }
  }

  .helperText {
    margin-left: $thumbBorderSize;
  }
}

.errorContainer {
  margin-top: c.$grid;
}
