@use '../styles/constants' as c;
$h: 3rem;
$radius: 3rem;

@mixin radius() {
  border-radius: $radius;
}

@mixin track() {
  background: none; /* get rid of Firefox track background */
  appearance: none;
  height: 100%;
  width: 100%;
  margin: 0 -1rem;
  padding: 0;
  border: 0;
}

@mixin thumb() {
  box-shadow: 0px 1px 4px rgba(53, 61, 73, 0.250956);
  background: c.$colorPrimaryLight;
  //background: red;
  border-radius: 50%;
  pointer-events: auto; /* catch clicks */
  width: 1rem;
  height: 1rem;
  box-sizing: content-box;
  border: 1rem solid c.$colorNeutralWhite;
  //opacity: 0.5;
}

.wrapper {
  display: grid;
  align-items: center;
  grid-template-rows: max-content 1fr;
  //background: gray;
  height: $h;
  //border-radius: $radius;
  overflow: hidden;
  padding: 1.5rem;

  input[type='range'] {
    &::-webkit-slider-runnable-track,
    &::-webkit-slider-thumb,
    & {
      -webkit-appearance: none;
    }

    outline: none;
    grid-column: 1;
    grid-row: 2;
    background: none;
    margin: 0;
    // ignore clicks on the actual inputs and let them pass to the handles
    pointer-events: none;

    &::-webkit-slider-runnable-track {
      @include track;
    }

    &::-moz-range-track {
      @include track;
    }

    &::-webkit-slider-thumb {
      @include thumb;
    }

    &::-moz-range-thumb {
      @include thumb;
    }
  }

  input[type='range'].atTheBorder {
    &::-webkit-slider-thumb {
      pointer-events: none;
    }

    &::-moz-range-thumb {
      pointer-events: none;
    }
  }

  .fill {
    background: c.$colorPrimaryLight;
    content: '';
    grid-column: 1;
    grid-row: 2;
    height: 50%;
    pointer-events: none;
    border-radius: $radius;
  }

  .fillPlaceholder {
    background: c.$colorNeutral;
    border: 1px solid c.$colorNeutralLight;
    content: '';
    grid-column: 1;
    grid-row: 2;
    height: 50%;
    pointer-events: none;
    border-radius: $radius;
    width: 100%;
  }
}
