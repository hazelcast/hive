@use '../styles/constants' as c;
@use '../styles/helpers' as h;

// thumb width without a white border, let's make it the height of the slider
$thumbWidth: c.$slideTrackHeight;
$thumbFullWidth: $thumbWidth + c.$sliderThumbBorderSize * 2;

$fillBorderSize: 1px;

// We've double checked that everything works in IE11
/* doiuse-disable calc */
/* doiuse-disable multicolumn */
/* doiuse-disable css-appearance */

@mixin track() {
  background: none; // get rid of track background
  appearance: none;
  // it's important for these values to be 0 in order to be consistent across (Firefox/IE11) & Chrome
  margin: 0;
  padding: 0;
  border: 0;
  box-sizing: border-box;
}

@mixin thumb() {
  box-shadow: 0 c.$sliderThumbShadowSize c.$sliderThumbShadowBlur c.$sliderThumbShadowColor;
  background: c.$colorPrimaryLight; // background will represent the dot inside
  border: c.$sliderThumbBorderSize solid c.$colorNeutralWhite; // the white part will be done by the border
  box-sizing: content-box; /* and because of all of this, we need content-box */
  border-radius: 50%;
  pointer-events: auto; /* catch clicks */
  width: $thumbWidth;
  height: $thumbWidth;
}

// This mixing is used for fill and fillPlaceholder in order to pass events to the parent wrapper + use the same radius
@mixin fill {
  pointer-events: none;
}

@mixin gridParent($cols: 1fr, $rows: 1fr) {
  display: grid;
  grid-template-columns: $cols;
  grid-template-rows: $rows;
  -ms-grid-columns: $cols;
  -ms-grid-rows: $rows;
  display: -ms-grid; /* stylelint-disable-line declaration-block-no-duplicate-properties */
}

// used to position elements on top of each other using grid
@mixin gridItem($col: 1, $row: 1) {
  grid-column: $col;
  grid-row: $row;
  -ms-grid-column: $col;
  -ms-grid-row: $row;
}

.wrapper {
  display: flex;
  align-items: center;

  .groupWrapper {
    @include gridParent(1fr, 2fr);

    flex: 1;

    input[type='range'] {
      &::-webkit-slider-runnable-track,
      &::-webkit-slider-thumb,
      & {
        -webkit-appearance: none;
      }

      z-index: c.$zIndex100;
      outline: none;
      background: none;
      @include gridItem(1, 2);

      pointer-events: none; // ignore clicks on the actual inputs and let them pass to the handles
      min-height: c.$slideTrackHeight;
      padding: 0;
      margin: 0;
      justify-self: center;
      width: calc(100% + #{c.$sliderThumbBorderSize * 2});

      // Style the track
      &::-webkit-slider-runnable-track {
        @include track;
      }

      &::-moz-range-track {
        @include track;
      }

      &::-ms-track {
        @include track;

        visibility: hidden; // IE11 specific rule to hide the default tick marks
      }

      &::-webkit-slider-thumb {
        @include thumb;
      }

      &::-moz-range-thumb {
        @include thumb;
      }

      &::-ms-thumb {
        @include thumb;
      }

      /**
        Hover
       */
      &:hover,
      &.hover {
        &::-webkit-slider-thumb {
          box-shadow: 0 0 0 c.$sliderThumbHoverBorderSize c.$colorPrimary;
        }

        &::-moz-range-thumb {
          box-shadow: 0 0 0 c.$sliderThumbHoverBorderSize c.$colorPrimary;
        }

        &::-ms-thumb {
          box-shadow: 0 0 0 c.$sliderThumbHoverBorderSize c.$colorPrimary;
        }
      }

      &.focus,
      &:focus {
        &::-webkit-slider-thumb {
          box-shadow: 0 0 0 c.$outlineWidth c.$colorAccessibilityOutline;
        }

        &::-moz-range-thumb {
          box-shadow: 0 0 0 c.$outlineWidth c.$colorAccessibilityOutline;
        }

        &::-ms-thumb {
          box-shadow: 0 0 0 c.$outlineWidth c.$colorAccessibilityOutline;
        }
      }

      // don't show IE11's lower fill
      &::-ms-fill-lower {
        display: none;
      }
    }

    // see the javascript code for an explanation of this class
    input[type='range'].atTheBorder {
      &::-webkit-slider-thumb {
        pointer-events: none;
      }

      &::-moz-range-thumb {
        pointer-events: none;
      }
    }

    ul.markDescriptions {
      @include gridItem(1, 1);

      list-style-type: none;
      margin: 0;
      padding: 0;
      height: c.$grid * 6;
      position: relative;

      > li {
        position: absolute;
        transform: translateX(-50%);
      }
    }

    .fillPlaceholder {
      @include gridItem(1, 2);
      @include fill;
      @include gridParent;

      height: c.$slideTrackHeight;
      // highlighted part covers the border
      box-sizing: border-box;
      background: c.$colorNeutral;
      border: $fillBorderSize solid c.$colorNeutralLight;
      width: 100%;

      // if the actual fill is very small the border is rounded, it can reach out of the wrapper
      overflow: hidden;

      // we ned to reserve space like this manually mostly because of IE11
      margin-top: calc(#{c.$sliderThumbBorderSize} + #{c.$sliderThumbShadowSize});
      margin-bottom: calc(#{c.$sliderThumbBorderSize} + #{c.$sliderThumbShadowSize});
      border-radius: c.$sliderTrackBorderRadius;

      .fill {
        @include fill();
        @include gridItem;

        height: calc(#{c.$slideTrackHeight} - #{$fillBorderSize} * 2); // height minus border from top & bottom
        background: c.$colorPrimaryLight;
        // width & marginLeft will be set by a Javascript
      }

      ul.marks {
        @include gridItem;

        $markWidth: 2px;

        width: calc(100% - #{$markWidth});
        margin: 0;
        padding: 0;
        list-style-type: none;
        height: 100%;
        position: relative;

        > li {
          position: absolute;
          width: $markWidth; // margin from sides so that 0% & 100% marks are visible
          height: calc(#{c.$slideTrackHeight} - #{$fillBorderSize} * 2);
          background: c.$colorTextSecondary;

          &.active {
            background-color: c.$colorNeutralWhite;
          }
        }
      }
    }
  }

  .helperText {
    margin-left: c.$sliderThumbBorderSize;
    @include gridItem(2, 2);

    align-items: center;
  }

  &.disabled {
    .fillPlaceholder {
      background-color: c.$colorNeutral;

      .fill {
        background-color: c.$colorNeutralLight;
      }
    }

    input[type='range']:disabled {
      &::-webkit-slider-thumb {
        box-shadow: 0 0 0 c.$sliderThumbHoverBorderSize c.$colorNeutral;
        background: c.$colorNeutralLight;
      }

      &::-moz-range-thumb {
        box-shadow: 0 0 0 c.$sliderThumbHoverBorderSize c.$colorNeutral;
        background: c.$colorNeutralLight;
      }

      &::-ms-thumb {
        box-shadow: 0 0 0 c.$sliderThumbHoverBorderSize c.$colorNeutral;
        background: c.$colorNeutralLight;
      }
    }
  }
}

.errorContainer {
  margin-top: c.$grid;
}

/* doiuse-enable calc */
/* doiuse-enable multicolumn */
/* doiuse-enable css-appearance */
