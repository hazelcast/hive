@use '../styles/constants' as c;
@use '../styles/helpers' as h;

// Ideally, we would have used native `border` for every style: hover, error, focus.
// Since our focus outline is thicker than the native border, we cannot use the native border for focus styles.
// Say, the initial border is 1px. For focus you make it 2px. As result, it shifts the content inside. Not nice UX at all.
// To work around that in other places, we do not change the thickness of the border on focus.
// Instead we add a 1px inset box-shadow which adds ups to the border and gives us the desired 2px outline on focus.
// Back to the textarea. As you can see it is supposed to have rounded corners. So we use border-radius.
// Ideally, we would have used border-radius on the textarea itself and applied the same technique with the inset box-shadow.
// Guess what?
@mixin border($color) {
  box-shadow: inset 0 0 0 c.$borderWidth $color;
}

.container {
  @include c.typographyBodySmall;

  color: c.$colorText;
  box-sizing: border-box;
  margin: 0;

  .label {
    margin-bottom: c.$grid;
  }

  .helperText {
    display: block;
    margin: c.$grid 0 0 c.$grid;
  }

  .errorContainer {
    margin-top: c.$grid;
  }

  .textAreaContainer {
    display: flex;
    flex-direction: row;
  }

  .borderOverlay {
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    pointer-events: none;
    z-index: c.$zIndex100;
    border-radius: c.$borderRadius;

    @include border(c.$colorNeutralLight);
  }

  .textAreaWrapper {
    position: relative;
    width: 100%;
    border-radius: c.$borderRadius;
    overflow: hidden;
    box-sizing: border-box;
  }

  textarea {
    display: block;
    padding: c.$grid * 2 c.$grid * 3;
    border: none;
    box-sizing: border-box;
    width: 100%;
    font-family: inherit;
    font-weight: inherit;
    font-size: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    color: inherit;
    background-color: c.$colorNeutralLighter;
    /* doiuse-disable css-resize */
    resize: vertical;
    /* doiuse-enable css-resize */

    // Note: Resize is not supported by IE11, it's presence does no harm though
    &.notResizable {
      /* doiuse-disable css-resize */
      resize: none;
      /* doiuse-enable css-resize */
    }

    &::placeholder {
      color: c.$colorTextSecondary;
    }
  }

  &.hover .textAreaWrapper,
  .textAreaWrapper:hover {
    .borderOverlay {
      @include border(c.$colorPrimary);
    }
  }

  &.disabled {
    .textAreaWrapper {
      color: c.$colorTextSecondary;
      background-color: c.$colorNeutral;

      .borderOverlay {
        @include border(c.$colorNeutralLight);
      }
    }
  }

  &.hasError {
    .textAreaWrapper .borderOverlay {
      @include border(c.$colorError);
    }
  }

  // We keep it for IE11 that does not support :focus-within
  textarea:focus {
    @include h.outlineFormField;
  }
  &.focus .textAreaWrapper,
  .textAreaWrapper:focus-within {
    .borderOverlay {
      @include h.outlineSimple;
    }
    textarea {
      @include h.outlineFormField;
    }
  }
}
