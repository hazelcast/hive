@use 'sass:color';
@use '../styles/constants' as c;
@use '../styles/helpers' as h;

@mixin buttonColor($color: c.$colorPrimary) {
  color: $color;
  background-color: $color;
  border-color: $color;
}

@mixin disabledButtonColor {
  color: c.$colorTextSecondary;
  background-color: c.$colorNeutral;
  border-color: c.$colorNeutral;
}

.button {
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  border: none;
  padding: 0;
  border-radius: c.$borderRadiusButtonSmall;
  height: c.$inputHeightSmall;
  max-width: c.$buttonMaxWidth;

  // for <a> element
  text-decoration: none;

  @include c.typographyButton('small');

  &.medium {
    height: c.$grid * 10.75;

    @include c.typographyButton('medium');
  }

  .outline {
    position: absolute;
    border-radius: c.$borderRadiusButtonSmall;
    pointer-events: none;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* doiuse-disable calc */
    width: calc(100% + #{c.$grid} * 2);
    height: calc(100% + #{c.$grid} * 2);
    /* doiuse-enable calc */
    z-index: c.$zIndex100;
    visibility: hidden;

    @include h.outlineSimple;

    &.inset {
      width: 100%;
      height: 100%;
    }
  }

  &:focus-visible,
  &.focus {
    // Do not remove outline for high-contrast modes
    // https://stackoverflow.com/a/52616313
    outline: c.$outlineWidth solid transparent;

    .outline {
      visibility: visible;
    }
  }

  &:disabled {
    cursor: not-allowed;
  }

  .iconLeft {
    flex-shrink: 0;
    margin-right: c.$grid * 2;
  }

  .iconRight {
    flex-shrink: 0;
    margin-left: c.$grid * 2;
  }

  .body {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    max-width: 100%;
    width: 100%;
    height: 100%;
    padding: 0 c.$grid * 5;
    box-sizing: border-box;
  }

  &.color {
    &Primary {
      @include buttonColor(c.$colorPrimary);

      &:hover,
      &.hover,
      &:focus-visible,
      &.focus {
        @include buttonColor(c.$colorPrimaryLight);
      }

      &:active,
      &.active {
        @include buttonColor(c.$colorPrimaryDark);
      }

      &.variantContained {
        color: c.$colorNeutralWhite;
      }

      &:disabled {
        @include disabledButtonColor;
      }
    }

    &Secondary {
      @include buttonColor(c.$colorError);

      &:hover,
      &.hover,
      &:focus-visible,
      &.focus {
        @include buttonColor(c.$colorErrorLight);
      }

      &:active,
      &.active {
        @include buttonColor(c.$colorErrorDark);
      }

      &.variantContained {
        color: c.$colorNeutralWhite;
      }

      &:disabled {
        @include disabledButtonColor;
      }
    }

    &Warning {
      @include buttonColor(c.$colorWarning);

      &:hover,
      &.hover,
      &:focus-visible,
      &.focus {
        @include buttonColor(c.$colorWarningLight);
      }

      &:active,
      &.active {
        @include buttonColor(c.$colorWarningDark);
      }

      &.variantContained {
        color: c.$colorText;
      }

      &:disabled {
        @include disabledButtonColor;
      }
    }

    &Brand {
      @include buttonColor(c.$colorBrand);

      &:hover,
      &.hover,
      &:focus-visible,
      &.focus {
        @include buttonColor(color.adjust(c.$colorBrand, $lightness: 20%));
      }

      &:active,
      &.active {
        @include buttonColor(color.adjust(c.$colorBrand, $lightness: -10%));
      }

      &.variantContained {
        color: c.$colorNeutralWhite;
      }

      &:disabled {
        @include disabledButtonColor;
      }
    }

    &AuthPrimary {
      @include buttonColor(c.$colorBrandPrimary);

      &:hover,
      &.hover,
      &:focus-visible,
      &.focus {
        @include buttonColor(color.adjust(c.$colorBrandPrimary, $lightness: 10%));
      }

      &:active,
      &.active {
        @include buttonColor(color.adjust(c.$colorBrandPrimary, $lightness: -10%));
      }

      &.variantContained {
        color: c.$colorText;
      }

      &:disabled {
        @include disabledButtonColor;
      }
    }

    &AuthSecondary {
      @include buttonColor(c.$colorAuthSecondary);

      border-color: c.$colorNeutralWhite;

      &:hover,
      &.hover,
      &:focus-visible,
      &.focus {
        @include buttonColor(color.adjust(c.$colorAuthSecondary, $lightness: 10%));
      }

      &:active,
      &.active {
        @include buttonColor(color.adjust(c.$colorAuthSecondary, $lightness: -10%));
      }

      &.variantContained {
        color: c.$colorNeutralWhite;
      }

      &.variantOutlined {
        border-color: c.$colorAuthSecondary;
      }

      &:disabled {
        color: c.$colorText;
        background-color: c.$colorNeutralWhite;
      }
    }

    &Light {
      @include buttonColor(c.$colorNeutralLighter);

      border-color: c.$colorNeutralLighter;

      &:hover,
      &.hover,
      &:focus-visible,
      &.focus {
        @include buttonColor(color.adjust(c.$colorBrandText, $lightness: 10%));
      }

      &:active,
      &.active {
        @include buttonColor(c.$colorBrandText);
      }

      &.variantContained {
        color: c.$colorText;

        &:disabled {
          @include disabledButtonColor;
        }
      }

      &:disabled {
        @include buttonColor(c.$colorNeutralLight);
      }
    }
  }

  &.variant {
    &Outlined {
      background: none;
      border-style: solid;
      border-width: c.$borderWidth;

      .outline {
        /* Note: We need to take border of 1px into account */
        /* doiuse-disable calc */
        width: calc(100% + #{c.$grid} * 2.5);
        height: calc(100% + #{c.$grid} * 2.5);
        /* doiuse-enable calc */

        &.inset {
          /* doiuse-disable calc */
          width: calc(100% + #{c.$grid});
          height: calc(100% + #{c.$grid});
          /* doiuse-enable calc */
        }
      }

      &:hover,
      &.hover,
      &:active,
      &.active,
      &:focus-visible,
      &.focus,
      &:disabled,
      &.disabled {
        background: none;
      }
    }

    &Text {
      background: none;

      &:hover,
      &.hover,
      &:active,
      &.active,
      &:focus-visible,
      &.focus,
      &:disabled,
      &.disabled {
        background: none;
      }
    }
  }
}
