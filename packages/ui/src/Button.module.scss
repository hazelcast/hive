@import '../styles/constants/index';

.button {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  cursor: pointer;
  border: none;
  font-weight: $fontWeightNormal;
  font-family: $fontFamily;
  color: $colorNeutralWhite;

  &:disabled {
    cursor: not-allowed;
  }

  .body {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  &.normal {
    border-radius: $borderRadiusMedium;
    font-size: $fontSizeButton;
    min-height: $grid * 8;
    padding: 0 $grid * 3;

    .icon {
      width: $grid * 6;
      height: $grid * 6;
    }

    .iconLeft {
      margin-right: $grid * 2;
    }

    .iconRight {
      margin-left: $grid * 2;
    }
  }

  &.fullWidth {
    flex: 1;
  }

  // Type
  &.primary {
    color: $colorNeutralWhite;
    background-color: $colorPrimaryNormal;

    &:hover,
    &.hover,
    &:focus,
    &.focus {
      background-color: $colorPrimaryDark;
    }

    &:active,
    &.active {
      background-color: $colorPrimaryDarker;
    }

    &:disabled {
      background-color: $colorPrimaryLight;
    }
  }

  /* TODO: Background color? */
  &.secondary {
    color: $colorNeutralDark;
    background-color: transparent;
    border: 1px solid;
    border-color: $colorNeutralNormal;

    &:hover,
    &.hover,
    &:focus,
    &.focus {
      color: $colorNeutralDark;
      border-color: $colorNeutralDark;
    }

    &:active,
    &.active {
      color: $colorNeutralDark;
      border-color: $colorNeutralDarker;
      -webkit-box-shadow: inset 0 0 $grid * 2 0 $colorNeutralNormal;
      -moz-box-shadow: inset 0 0 $grid * 2 0 $colorNeutralNormal;
      box-shadow: inset 0 0 $grid * 2 0 $colorNeutralNormal;
    }

    &:disabled {
      color: $colorNeutralNormal;
      border-color: $colorNeutralLight;
    }
  }

  &.status {
    &.statusSuccess {
      &.statusPrimary {
        color: $colorNeutralWhite;
        background-color: $colorSuccessNormal;
      }
      &.statusSecondary {
        border: 1px solid $colorSuccessNormal;
        color: $colorSuccessNormal;
        background-color: transparent;
      }
    }

    &.statusInfo {
      &.statusPrimary {
        color: $colorNeutralWhite;
        background-color: $colorInfoNormal;
      }
      &.statusSecondary {
        border: 1px solid $colorInfoNormal;
        color: $colorInfoNormal;
        background-color: transparent;
      }
    }

    &.statusWarning {
      &.statusPrimary {
        color: $colorNeutralWhite;
        background-color: $colorWarningNormal;
      }
      &.statusSecondary {
        border: 1px solid $colorWarningNormal;
        color: $colorWarningNormal;
        background-color: transparent;
      }
    }

    &.statusCritical {
      &.statusPrimary {
        color: $colorNeutralWhite;
        background-color: $colorCriticalNormal;
      }
      &.statusSecondary {
        border: 1px solid $colorCriticalNormal;
        color: $colorCriticalNormal;
        background-color: transparent;
      }
    }
  }

  /* Dashed border source: https://kovart.github.io/dashed-border-generator/ */
  &.dashed {
    color: $colorNeutralDark;
    background-color: transparent;
    // Colour set by 'stroke', special characters are encoded
    background-image: url("data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23b7c1cbff' stroke-width='2' stroke-dasharray='6%2c 6' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e");

    &:hover,
    &.hover,
    &:focus,
    &.focus {
      // Colour set by 'stroke', special characters are encoded
      background-image: url("data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%236D7480ff' stroke-width='2' stroke-dasharray='6%2c 6' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e");
    }

    &:active,
    &.active {
      // Colour set by 'stroke', special characters are encoded
      background-image: url("data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23353D49ff' stroke-width='2' stroke-dasharray='6%2c 6' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e");
      -webkit-box-shadow: inset 0 0 $grid * 2 0 $colorNeutralNormal;
      -moz-box-shadow: inset 0 0 $grid * 2 0 $colorNeutralNormal;
      box-shadow: inset 0 0 $grid * 2 0 $colorNeutralNormal;
    }

    &:disabled {
      color: $colorNeutralLight;
      // Colour set by 'stroke', special characters are encoded
      background-image: url("data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23E3E7EDff' stroke-width='2' stroke-dasharray='6%2c 6' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e");
    }
  }

  &.danger {
    color: $colorNeutralWhite;
    background-color: $colorCriticalNormal;

    &:hover,
    &.hover,
    &:focus,
    &.focus {
      background-color: $colorCriticalDark;
    }

    &:active,
    &.active {
      background-color: $colorCriticalDarker;
    }

    &:disabled {
      background-color: $colorCriticalLight;
    }
  }
}
