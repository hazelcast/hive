@use '../styles/constants' as c;
@use '../styles/helpers' as h;

.button {
  display: inline-block;
  position: relative;
  box-sizing: border-box;
  cursor: pointer;
  border: none;
  padding: 0;
  border-radius: c.$borderRadius;
  height: c.$grid * 10;
  max-width: c.$buttonMaxWidth;
  // for <a> element
  text-decoration: none;

  @include c.typographyButton;

  .outline {
    position: absolute;
    border-radius: c.$borderRadius;
    pointer-events: none;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* doiuse-disable calc */
    width: calc(100% + #{c.$grid} * 2);
    height: calc(100% + #{c.$grid} * 2);
    /* doiuse-enable calc */
    z-index: c.$zIndex100;
    visibility: hidden;

    @include h.outlineSimple;
  }

  &:focus,
  &.focus {
    // Do not remove outline for high-contrast modes
    // https://stackoverflow.com/a/52616313
    outline: c.$outlineWidth solid transparent;

    .outline {
      visibility: visible;
    }
  }

  &:disabled {
    cursor: not-allowed;
  }

  .iconLeft {
    flex-shrink: 0;
    margin-right: c.$grid * 2;
  }

  .iconRight {
    flex-shrink: 0;
    margin-left: c.$grid * 2;
  }

  .body {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    max-width: 100%;
    width: 100%;
    height: 100%;
    padding: 0 c.$grid * 5;
    box-sizing: border-box;
  }

  // Kind === primary
  &.primary {
    color: c.$colorNeutralWhite;
    background-color: c.$colorPrimary;

    &:hover,
    &.hover,
    &:focus,
    &.focus {
      background-color: c.$colorPrimaryLight;
    }

    &:active,
    &.active {
      background-color: c.$colorPrimaryDark;
    }

    &:disabled {
      color: c.$colorTextSecondary;
      background-color: c.$colorNeutral;
    }
  }

  // Kind === secondary
  &.secondary {
    color: c.$colorPrimary;
    background-color: transparent;
    border: c.$borderWidthButton solid;
    border-color: c.$colorPrimary;

    .outline {
      /* Note: We need to take border of 2*2px into account */
      /* doiuse-disable calc */
      width: calc(100% + #{c.$grid} * 3);
      height: calc(100% + #{c.$grid} * 3);
      /* doiuse-enable calc */
    }

    &:hover,
    &.hover,
    &:focus,
    &.focus {
      color: c.$colorPrimaryLight;
      border-color: c.$colorPrimaryLight;
    }

    &:active,
    &.active {
      color: c.$colorPrimaryDark;
      border-color: c.$colorPrimaryDark;
    }

    &:disabled {
      color: c.$colorTextSecondary;
      border-color: c.$colorNeutral;
    }
  }

  // Kind === danger
  &.danger {
    color: c.$colorNeutralWhite;
    background-color: c.$colorError;

    &:hover,
    &.hover,
    &:focus,
    &.focus {
      background-color: c.$colorErrorLight;
    }

    &:active,
    &.active {
      background-color: c.$colorErrorDark;
    }

    &:disabled {
      color: c.$colorTextSecondary;
      background-color: c.$colorNeutral;
    }
  }

  // Kind === transparent
  &.transparent {
    color: inherit;
    background-color: transparent;
  }
}
