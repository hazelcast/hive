@use "../styles/constants" as c;
@use "../styles/helpers" as h;

$selectHorizontalPadding: c.$grid * 3;
$menuMargin: c.$grid * 3;
$select: ":global .hz-autocomplete-field__control";

.container {
  .label {
    display: block;
    margin-bottom: c.$grid;
  }

  .helperText {
    margin-left: c.$grid * 1.5;
    display: block;
  }

  .clear {
    margin-left: $selectHorizontalPadding;
  }

  :global .hz-autocomplete-field {
    flex: 1 1 auto;

    @include c.typographyBodySmall;
  }

  :global .hz-autocomplete-field__value-container {
    padding: 0;
  }

  :global .hz-autocomplete-field__single-value {
    color: c.$colorText;
  }

  :global .hz-autocomplete-field__indicator-separator {
    display: none;
  }

  #{$select} {
    cursor: pointer;
    color: c.$colorText;
    min-height: c.$inputHeight;
    padding-left: c.$grid * 3;
    padding-right: c.$grid * 2;
    box-sizing: border-box;
    border: c.$borderWidth solid c.$colorNeutralLight;
    border-radius: c.$borderRadius;
    background-color: c.$colorNeutralWhite;
    transition: none;

    &.hz-autocomplete-field__control--menu-is-open {
      border-radius: c.$borderRadius c.$borderRadius 0 0;
    }

    .hz-autocomplete-field__dropdown-indicator {
      color: c.$colorNeutralLight;
    }
  }

  &.disabled {
    #{$select} {
      color: c.$colorTextSecondary;
      background-color: c.$colorNeutral;
      border-color: c.$colorNeutralLight;
    }
  }

  &.hasError {
    #{$select} {
      border-color: c.$colorError;
    }
  }

  // We target specifically #{$select} not to apply hover styles to the select when a helper icon is hovered
  #{$select}:hover,
  &.hover #{$select} {
    border-color: c.$colorPrimary;
    transition: none;
  }

  &.focus #{$select},
  #{$select}.hz-autocomplete-field__control--is-focused {
    @include h.outlineFormField;
  }

  .selectBlock {
    display: flex;
    flex-direction: row;
    align-items: center;
    position: relative;
  }
}

.menuContainer {
  :global .hz-autocomplete-field__menu-portal {
    z-index: c.$zIndex2000;
  }

  :global .hz-autocomplete-field__matched-option-text {
    font-weight: bolder;
    color: c.$colorText;
  }

  :global .hz-autocomplete-field__menu {
    margin-top: 0;
    margin-bottom: $menuMargin;
    border: c.$borderWidth solid c.$colorNeutralLight;
    border-radius: 0 0 c.$borderRadius c.$borderRadius;
    background-color: c.$colorNeutralWhite;
    overflow: hidden;
    box-shadow: 0 c.$selectMenuShadowSize c.$selectMenuShadowBlur 0 c.$colorShadow;
    z-index: c.$zIndex1000;

    @include c.typographyBodySmall;

    :global .hz-autocomplete-field__menu-list {
      padding: 0;
      color: c.$colorTextSecondary;
    }

    :global .hz-autocomplete-field__option,
    :global .hz-autocomplete-field__menu-notice {
      height: c.$grid * 8;
      line-height: c.$grid * 8;
      padding: 0 $selectHorizontalPadding;
      background-color: transparent;

      // Do not remove outline for high-contrast modes
      // https://stackoverflow.com/a/52616313
      outline: c.$outlineWidth solid transparent;
      text-align: left;
      white-space: pre;

      &:global.hz-autocomplete-field__option--is-focused {
        @include h.outlineSimple;
      }

      &:global.hz-autocomplete-field__option--is-selected {
        color: c.$colorTextSecondary;
        text-decoration: underline;
      }
    }
  }
}

@include h.withError;
