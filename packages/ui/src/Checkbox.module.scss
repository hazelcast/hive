@use '../styles/constants' as c;

$checkboxFontSize: c.$grid * 4;
$borderSize: 1px;

.wrapper {
  display: block;
  position: relative;
  padding-left: calc(#{$checkboxFontSize} + 8px); // checkbox + padding
  user-select: none;
  cursor: pointer;
  font-size: $checkboxFontSize;
  line-height: calc(#{$checkboxFontSize} + #{$borderSize} * 2);

  // Outline on focus
  input:focus ~ .checkmark {
    box-shadow: 0 0 0 c.$outlineWidth c.$colorAccessibilityOutline;
    border: 1px solid transparent;

    outline-color: transparent;
    outline-width: c.$outlineWidth;
  }
}

.wrapper:not(.checked) {
  color: c.$colorTextSecondary;
}

// hide native checkbox
.wrapper > input {
  height: 0;
  width: 0;
  opacity: 0;
  position: absolute;
}

// default visible checkmark
.checkmark {
  position: absolute;
  width: $checkboxFontSize;
  height: $checkboxFontSize;
  top: 0;
  left: 0;
  border: 1px solid c.$colorNeutralLight;
  border-radius: 4px;
  color: white;
}

.wrapper > input:checked ~ .checkmark,
.wrapper > input:indeterminate ~ .checkmark {
  background-color: c.$colorSuccessLight;
  border: 1px solid transparent;
}

/**
Disabled
*/
.wrapper.disabled {
  color: c.$colorNeutralLight;
}

label.wrapper.disabled > input:checked ~ .checkmark,
label.wrapper.disabled > input:indeterminate ~ .checkmark {
  background-color: c.$colorNeutral;
  color: white;
  border: 1px solid c.$colorNeutralLight;
}

/**
Error state
 */
.error .checkmark {
  border: 1px solid c.$colorError;
}
.errorMessage {
  color: c.$colorError;
  font-size: $checkboxFontSize;
  padding-top: c.$grid;
}
