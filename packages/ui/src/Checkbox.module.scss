@use '../styles/constants' as c;

$checkboxFontSize: c.$grid * 4;
$borderSize: 1px;

.wrapper {
  display: inline-flex;
  flex-direction: row;
  user-select: none;
  cursor: pointer;
  @include c.typographyBodySmall;

  // Outline on focus
  input:focus ~ .checkmark {
    @include h.outlineFormField;
  }
}

.wrapper:not(.checked) {
  color: c.$colorTextSecondary;
}

// hide native checkbox
.wrapper > input {
  height: 0;
  width: 0;
  opacity: 0;
  position: absolute;
}

// default visible checkmark
.checkmark {
  width: c.$iconSize;
  height: c.$iconSize;
  border: 1px solid c.$colorNeutralLight;
  border-radius: 25%;
  color: c.$colorNeutralWhite;
  // because of ~ and + selectors used below, we need to keep the current order in DOM and
  // fix it visually with order property
  order: -1;
}

.name {
  padding-left: $checkboxFontSize / 2;
}

.wrapper > input:checked ~ .checkmark {
  background-color: c.$colorSuccessLight;
  border: 1px solid transparent;
}
.wrapper > input:indeterminate ~ .checkmark {
  background-color: c.$colorPrimaryLight;
  border: 1px solid transparent;
}

/**
  Disabled
*/
.wrapper.disabled {
  color: c.$colorNeutralLight;
}

label.wrapper.disabled > input:checked ~ .checkmark,
label.wrapper.disabled > input:indeterminate ~ .checkmark {
  background-color: c.$colorNeutral;
  color: white;
  border: 1px solid c.$colorNeutralLight;
}

/**
Error state
 */
.error .checkmark {
  border: 1px solid c.$colorError;
}
