@use '../styles/constants' as c;
@use '../styles/helpers' as h;

$h: c.$grid * 6;
$w: c.$grid * 15;
$labelMargin: c.$grid * 4;
$trackBr: 22px;
$trackBgOn: #1dbc22;
$trackBgOff: c.$colorNeutralLight;
$knobRight: $w * 0.6;
$knobBgOn: c.$colorNeutralWhite;
$knobBgOff: c.$colorNeutralLighter;
$knobR: $h * 0.9;
$knobOffset: c.$grid * 0.3;
$knobFontSize: c.$grid * 3.5;

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.wrapper {
  // hide the actual input, we will show the toggleTrack instead.
  input[type='checkbox'] {
    display: none;
  }

  // faux wrapping label
  label {
    cursor: pointer;
    display: inline-flex; // for aligning with the .labelText
    align-items: center;
  }

  // actual text label
  .labelText {
    margin-right: $labelMargin;
  }

  // the `track` (default off state)
  .toggleTrack {
    display: inline-block;
    height: $h;
    width: $w;
    background: $trackBgOff;
    border-radius: $trackBr;
    position: relative;
    border: c.$borderWidth solid transparent;
    box-sizing: border-box;
  }

  &:hover,
  &.hover {
    .toggleTrack {
      border-color: c.$colorPrimary;
    }
  }

  &:focus,
  &.focus {
    .toggleTrack {
      @include h.outlineFormField;
    }
  }

  .error {
    .toggleTrack {
      border-color: c.$colorError;
    }
  }

  // track on state
  input[type='checkbox']:checked + label .toggleTrack {
    background: $trackBgOn;
  }

  // the `knob` (default off state)
  // +1/-1 calculations used for pixel perfection with default $grid value.
  // otherwise it looks 1px off :/
  .toggleTrack:before {
    content: '';
    display: inline-block;
    height: calc(#{$knobR} - 2px);
    width: calc(#{$knobR} - 1px);
    background: $knobBgOff;
    border-radius: 50%;
    position: absolute;
    top: calc(#{$knobOffset} + 0px);
    right: calc(#{$knobOffset} + 0px);
    transition: right c.$transitionTimeMedium ease-in;
  }

  // knob on state
  input[type='checkbox']:checked + label .toggleTrack:before {
    background: $knobBgOn;
    right: $knobRight;
  }

  // the "OFF" text
  input[type='checkbox'] + label .toggleTrack:after {
    content: 'OFF';
    position: absolute;
    top: 1px;
    left: 6px;
    font-size: $knobFontSize;
    color: #fff;
    animation: fadein c.$transitionTimeMedium;
  }

  // the "ON" text
  input[type='checkbox']:checked + label .toggleTrack:after {
    content: 'ON';
    right: 8px;
    left: unset;
  }

  // global disabled state
  .disabled .toggleTrack {
    background-color: c.$colorNeutral;
    color: c.$colorNeutralWhite;
    border-color: c.$colorNeutralLight;
    cursor: not-allowed;
  }
}

.errorContainer {
  margin-top: c.$grid;
}
