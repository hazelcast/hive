@use '../styles/constants' as c;
@use '../styles/helpers' as h;

$h: c.$grid * 6;
$w: c.$grid * 15;
$labelMargin: c.$grid * 2.5;
$trackBr: calc(#{$h} - #{c.$borderWidth * 2});
$trackBgOn: c.$colorSuccessLight;
$trackBgOff: c.$colorNeutralLight;
$knobBgOn: c.$colorNeutralWhite;
$knobBgOff: c.$colorNeutralLighter;
$knobRadius: c.$grid * 5;
$knobOffset: c.$grid * 0.25;

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.wrapper {
  // hide the actual input, we will show the toggleTrack instead.
  input[type='checkbox'] {
    display: none;
  }

  // faux wrapping label
  label {
    cursor: pointer;
    display: inline-flex; // for aligning with the .labelText
    align-items: center;
    color: c.$colorText;
    vertical-align: middle;

    @include c.typographyBodySmall;

    &.disabled {
      cursor: not-allowed;
      color: c.$colorNeutralLight;
    }
  }

  // actual text label
  .labelText {
    margin-right: $labelMargin;
  }

  .helperText {
    margin-left: c.$grid * 1.5;
  }

  // the `track` (default off state)
  .toggleTrack {
    display: inline-block;
    height: $h;
    width: $w;
    background: $trackBgOff;
    border-radius: $trackBr;
    position: relative;
    border: c.$borderWidth solid transparent;
    box-sizing: border-box;
    color: c.$colorNeutralWhite;
  }

  // track states
  .hover .toggleTrack,
  .toggleTrack:hover {
    border-color: c.$colorPrimary;
  }

  .error .toggleTrack {
    border-color: c.$colorError;
  }

  .focus .toggleTrack,
  .toggleTrack:focus {
    @include h.outlineFormField;
  }

  .disabled .toggleTrack {
    background-color: c.$colorNeutral;
    border-color: c.$colorNeutralLight;
    box-shadow: none;
  }

  // track ON state
  input[type='checkbox']:checked + label .toggleTrack {
    background: $trackBgOn;
  }

  // the `knob` OFF state
  .toggleTrack::before {
    content: '';
    display: inline-block;
    height: $knobRadius;
    width: $knobRadius;
    background: $knobBgOff;
    border-radius: 50%;
    position: absolute;
    top: $knobOffset;
    right: $knobOffset;
    transition: right c.$transitionTimeMedium ease-in;
  }

  // knob ON state
  input[type='checkbox']:checked + label .toggleTrack::before {
    background: $knobBgOn;
    right: $w - $knobRadius - (3 * $knobOffset);
  }

  .toggleTrackText {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    color: c.$colorNeutralWhite;
  }

  // the "OFF" text
  input[type='checkbox'] + label .toggleTrackText {
    left: c.$grid * 1.5;
    animation: fadein c.$transitionTimeMedium;
  }

  // the "ON" text
  input[type='checkbox']:checked + label .toggleTrackText {
    right: c.$grid * 2;
    left: auto;
    animation: fadein c.$transitionTimeMedium;
  }
}

.errorContainer {
  margin-top: c.$grid;
}
