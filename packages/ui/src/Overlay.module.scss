@use '../styles/constants' as c;
@use '../styles/helpers' as h;

.overlayed {
  overflow: hidden;
}

.portal {
  width: 100vw;
  height: 100vh;
  position: fixed;
  z-index: c.$zIndex1000;
  pointer-events: none;
}

.modal {
  background: transparentize(c.$colorOverlayBackground, 0.1);
  width: 100vw;
  height: 100vh;
  z-index: c.$zIndex1000;
  padding: c.$grid * 5;
  box-sizing: border-box;
  pointer-events: all;
  animation: fadeIn 500ms;

  @keyframes fadeIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  // Since Overlay is full screen, we don't have to show an outline
  &:focus {
    outline: transparent;
  }

  .wrapper {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    height: 100%;
    max-height: 100%;

    &.normal {
      max-width: c.$overlayContentMaxWidth;
    }

    .fullscreen {
      max-width: 100%;
    }

    .header {
      $iconSize: c.$grid * 9;

      display: flex;
      justify-content: center;
      align-items: center;
      overflow: hidden;
      min-height: c.$grid * 16;
      margin-bottom: c.$grid * 9;
      padding: 0 c.$grid * 21; // close button width

      @media only screen and (width <= 640px) {
        padding: 0 $iconSize;

        .closeText {
          @include h.visuallyHidden;
        }
      }

      .close {
        position: absolute;
        right: c.$grid * 5;
        top: c.$grid * 5;
        padding: 0;

        .closeIcon {
          width: $iconSize;
          height: $iconSize;
          color: c.$colorText;
        }
      }

      .icon {
        margin-right: c.$grid * 2.5;
      }

      .title {
        margin: 0;
        overflow: hidden;
        word-break: break-word;
      }
    }

    .content {
      flex: 1 1 auto;
      overflow: auto;
    }
  }
}
